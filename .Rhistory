cluster_rows = TRUE,
cluster_cols = FALSE,
annotation_col = annotation_col)
print(p)
pheatmap::pheatmap(mat, show_rownames = TRUE,
show_colnames = FALSE,
cluster_rows = TRUE,
cluster_cols = FALSE,
annotation_col = annotation_col)
pheatmap(mat, show_rownames = TRUE,
show_colnames = FALSE,
cluster_rows = TRUE,
cluster_cols = FALSE,
annotation_col = annotation_col)
pheatmap::pheatmap(mat, show_rownames = TRUE,
show_colnames = FALSE,
cluster_rows = TRUE,
cluster_cols = FALSE,
annotation_col = annotation_col)
View(p)
print(p)
dev.off()
p = pheatmap::pheatmap(mat, show_rownames = TRUE,
show_colnames = FALSE,
cluster_rows = TRUE,
cluster_cols = FALSE,
annotation_col = annotation_col)
print(p)
pdf(file = "test.pdf")
p = pheatmap::pheatmap(mat, show_rownames = TRUE,
show_colnames = FALSE,
cluster_rows = TRUE,
cluster_cols = FALSE,
annotation_col = annotation_col)
print(p)
dev.off()
dev.off()
View(annotation_col)
pheatmap::pheatmap(mat[, rownames(annotation_col)], show_rownames = TRUE,
show_colnames = FALSE,
cluster_rows = TRUE,
cluster_cols = FALSE,
annotation_col = annotation_col)
annotation_col = annotation_col%>%dplyr::arrange(cluster)
pheatmap::pheatmap(mat[, rownames(annotation_col)], show_rownames = TRUE,
show_colnames = FALSE,
cluster_rows = TRUE,
cluster_cols = FALSE,
annotation_col = annotation_col)
load_all()
TCGA_PathObj = SelectBestClusterNum(obj = TCGA_PathObj,
method="hclust",
k=12)
getwd()
TCGA_PathObj = CreatePathObject(gmt_path="test/data/tmp/h.all.v7.4.symbols.gmt",
gene_exp_counts='test/data/tmp/TCGA_HNSC_gene_exp_count.csv',
gene_map='test/data/tmp/Homo_sapiens.GRCh38.99.chr.gtf',
gene_exp_TPM="test/data/tmp/TCGA_HNSC_gene_exp_TPM_tumor.csv",
ppi_data_path="test/data/tmp/ppi_dataset_all.txt",
cor_method=1,
mut_exp="test/data/tmp/TCGA-HNSC_UCSC.varscan2_snv.tsv.gz",
count_log=FALSE,
TPM_log=FALSE,
GeneSetCollect=FALSE,
sep = "\t")
TCGA_PathObj = CreatePathObject(gmt_path="test/data/h.all.v7.4.symbols.gmt",
gene_exp_counts='test/data/TCGA_HNSC_gene_exp_count.csv',
gene_map='test/data/Homo_sapiens.GRCh38.99.chr.gtf',
gene_exp_TPM="test/data/TCGA_HNSC_gene_exp_TPM_tumor.csv",
ppi_data_path="test/data/ppi_dataset_all.txt",
cor_method=1,
mut_exp="test/data/TCGA-HNSC_UCSC.varscan2_snv.tsv.gz",
count_log=FALSE,
TPM_log=FALSE,
GeneSetCollect=FALSE,
sep = "\t")
#plot coding and non coding
#TCGA
mut_exp_TCGA = fread("test/data/TCGA.HNSC.varscan.5296cf00-4d8c-4db3-80d7-930a4b44f90d.DR-10.0.somatic.maf",
header = TRUE)
mut_exp_TCGA = mut_exp_TCGA[mut_exp_TCGA$Variant_Classification!="Silent", ]
classification = as.data.frame(table(mut_exp_TCGA$Variant_Classification))
mut_exp_TCGA$mut_classifcation = if_else(mut_exp_TCGA$Variant_Classification%in%c("3'Flank",
"3'UTR",
"5'Flank",
"5'UTR",
"Intron",
"Translation_Start_Site"),
"non_coding", "coding")
mut_exp_TCGA = mut_exp_TCGA[, c("Hugo_Symbol", "mut_classifcation")]
mut_classifcation = mut_exp_TCGA
View(mut_classifcation)
load_all()
check()
load_all()
use_build_ignore("test/data/")
use_build_ignore("test/ConsensusCluster/")
usethis::edit_r_environ()
library(devtools)
load_all()
debugSource('E:/GenesetTMB/test/test.R', echo=TRUE)
stopifnot(class(obj)=="PathObject")
stopifnot(ncol(mut_classifcation)==2)
force(my_pal)
library(ggsci)
my_pal = c(pal_npg()(12), pal_aaas()(12), pal_futurama()(12))
my_pal = my_pal[!is.na(my_pal)]
my_pal = my_pal[!duplicated(my_pal)]
is.null(obj@module1$pathway_feature)
load_all()
debugSource('E:/GenesetTMB/test/test.R', echo=TRUE)
geneset_names = obj@module1$geneset_names
ppi_exp_cor = obj@module1[["ppi_exp_cor"]]
sample_mut_list = obj@module1[["sample_mut_list"]]
ppi_dataset = obj@module1[["ppi_dataset"]]
geneset = obj@module1[["geneset"]]
pathway_tmp = geneset[[1]]
TCGA_PathObj = NetFeatureCalculate(TCGA_PathObj)
TCGA_PathObj = NetFeatureCalculate(TCGA_PathObj)
debugSource('E:/GenesetTMB/test/test.R', echo=TRUE)
stopifnot(class(obj)=="PathObject")
stopifnot(ncol(mut_classifcation)==2)
is.null(obj@module1$pathway_feature)
colnames(mut_classifcation) = c('geneid', 'mut_classification')
pathway_feature = obj@module1$pathway_feature
View(pathway_feature)
stopifnot(class(obj)=="PathObject")
stopifnot(ncol(mut_classifcation)==2)
is.null(obj@module1$pathway_feature)
colnames(mut_classifcation) = c('geneid', 'mut_classification')
pathway_feature = obj@module1$pathway_feature
path_mut_classifcation = lapply(names(pathway_feature), function(x){
path_feature_tmp = pathway_feature[[x]]
feature_tmp = path_feature_tmp$node_df
path_mut_classifcation_tmp = mut_classifcation[mut_classifcation$geneid%in%feature_tmp$geneid, ]
path_mut_classifcation_tmp$pathid = x
return(path_mut_classifcation_tmp)
})
path_mut_classifcation = do.call('rbind.data.frame', path_mut_classifcation)
path_mut_classifcation$pathid = str_remove_all(path_mut_classifcation$pathid,
"HALLMARK_")
path_mut_classifcation = path_mut_classifcation[, 2:3]
?group_by
?summarise
path_mut_classifcation = path_mut_classifcation%>%dplyr::group_by(pathid, mut_classification)%>%
dplyr::summarise(count=n())
path_factor_1 = path_mut_classifcation[path_mut_classifcation$mut_classification=="coding", ]%>%
dplyr::column_to_rownames(var = 'pathid')%>%dplyr::select(coding_count=count)
path_factor_2 = path_mut_classifcation[path_mut_classifcation$mut_classification=="non_coding", ]%>%
dplyr::column_to_rownames(var = 'pathid')%>%dplyr::select(non_coding_count=count)
?column_to_rownames
path_factor_1 = path_mut_classifcation[path_mut_classifcation$mut_classification=="coding", ]%>%
tibble::column_to_rownames(var = 'pathid')%>%dplyr::select(coding_count=count)
path_factor_2 = path_mut_classifcation[path_mut_classifcation$mut_classification=="non_coding", ]%>%
tibble::column_to_rownames(var = 'pathid')%>%dplyr::select(non_coding_count=count)
!purrr::is_empty(setdiff(rownames(path_factor_1), rownames(path_factor_2)))
path_factor_1 = path_factor_1[rownames(path_factor_2), , drop=FALSE]
path_factor = cbind.data.frame(path_factor_1, path_factor_2)
path_factor$non_coding_count_freq = path_factor$non_coding_count/(path_factor$coding_count+path_factor$non_coding_count)
path_factor = rownames_to_column(path_factor, var = 'pathid')
path_factor = path_factor%>%arrange(non_coding_count_freq)
path_factor = factor(path_factor$pathid, levels = path_factor$pathid)
path_mut_classifcation$pathid = factor(path_mut_classifcation$pathid,
levels = levels(path_factor))
path_mut_classifcation = arrange(path_mut_classifcation, pathid)
View(path_mut_classifcation)
View(path_mut_classifcation)
theme_main = function(){
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
#axis.text.x = element_text(size = 12, colour = "black"),
axis.text.y = element_text(size = 12, colour = "black"),
panel.border = element_rect(size = 0.7, linetype = 'solid', colour = "black"),
legend.position = 'right'
)
}
ggplot(path_mut_classifcation, aes(x = pathid,
y = count,
fill = mut_classification))+
geom_bar(stat = "identity", width = 0.8, position = "fill")+
scale_fill_manual(values = my_pal[1:length(unique(path_mut_classifcation$mut_classification))])+
labs(x="", y="Ration")+theme_bw()+
scale_y_continuous(position = "right")+
theme_main()+ggpubr::rotate_x_text(angle = 45)
load_all()
plot_mut_classification(obj = TCGA_PathObj, my_pal, mut_classifcation)
?str_remove_all
load_all()
plot_mut_classification(obj = TCGA_PathObj, my_pal, mut_classifcation)
check()
debugSource('E:/GenesetTMB/test/test.R', echo=TRUE)
load_all()
TCGA_PathObj = NetFeatureCalculate(TCGA_PathObj)
?V
?evcent
load_all()
TCGA_PathObj = NetFeatureCalculate(TCGA_PathObj)
load_all()
#usethis::use_gpl_license()
#usethis::use_tidy_eval()
#usethis::use_pipe()
library(ggsci)
my_pal = c(pal_npg()(12), pal_aaas()(12), pal_futurama()(12))
my_pal = my_pal[!is.na(my_pal)]
my_pal = my_pal[!duplicated(my_pal)]
TCGA_PathObj = CreatePathObject(gmt_path="test/data/h.all.v7.4.symbols.gmt",
gene_exp_counts='test/data/TCGA_HNSC_gene_exp_count.csv',
gene_map='test/data/Homo_sapiens.GRCh38.99.chr.gtf',
gene_exp_TPM="test/data/TCGA_HNSC_gene_exp_TPM_tumor.csv",
ppi_data_path="test/data/ppi_dataset_all.txt",
cor_method=1,
mut_exp="test/data/TCGA-HNSC_UCSC.varscan2_snv.tsv.gz",
count_log=FALSE,
TPM_log=FALSE,
GeneSetCollect=FALSE,
sep = "\t")
?estimate_xmin
?bootstrap_p
load_all()
#usethis::use_gpl_license()
#usethis::use_tidy_eval()
#usethis::use_pipe()
library(ggsci)
my_pal = c(pal_npg()(12), pal_aaas()(12), pal_futurama()(12))
my_pal = my_pal[!is.na(my_pal)]
my_pal = my_pal[!duplicated(my_pal)]
TCGA_PathObj = CreatePathObject(gmt_path="test/data/h.all.v7.4.symbols.gmt",
gene_exp_counts='test/data/TCGA_HNSC_gene_exp_count.csv',
gene_map='test/data/Homo_sapiens.GRCh38.99.chr.gtf',
gene_exp_TPM="test/data/TCGA_HNSC_gene_exp_TPM_tumor.csv",
ppi_data_path="test/data/ppi_dataset_all.txt",
cor_method=1,
mut_exp="test/data/TCGA-HNSC_UCSC.varscan2_snv.tsv.gz",
count_log=FALSE,
TPM_log=FALSE,
GeneSetCollect=FALSE,
sep = "\t")
TCGA_PathObj = NetFeatureCalculate(TCGA_PathObj)
load_all()
TCGA_PathObj = NetFeatureCalculate(TCGA_PathObj)
check()
pathid <- mut_classification <- non_coding_count_freq <- NULL
document()
check()
load_all()
document()
check()
?displ
check()
check()
check()
debugSource('E:/GenesetTMB/test/test.R', echo=TRUE)
#usethis::use_gpl_license()
#usethis::use_tidy_eval()
#usethis::use_pipe()
library(devtools)
devtools::load_all()
library(ggsci)
my_pal = c(pal_npg()(12), pal_aaas()(12), pal_futurama()(12))
my_pal = my_pal[!is.na(my_pal)]
my_pal = my_pal[!duplicated(my_pal)]
TCGA_PathObj = CreatePathObject(gmt_path="test/data/h.all.v7.4.symbols.gmt",
gene_exp_counts='test/data/TCGA_HNSC_gene_exp_count.csv',
gene_map='test/data/Homo_sapiens.GRCh38.99.chr.gtf',
gene_exp_TPM="test/data/TCGA_HNSC_gene_exp_TPM_tumor.csv",
ppi_data_path="test/data/ppi_dataset_all.txt",
cor_method=1,
mut_exp="test/data/TCGA-HNSC_UCSC.varscan2_snv.tsv.gz",
count_log=FALSE,
TPM_log=FALSE,
GeneSetCollect=FALSE,
sep = "\t")
TCGA_PathObj = NetFeatureCalculate(TCGA_PathObj)
TCGA_PathObj = DegreePathmutscore(TCGA_PathObj)
TCGA_PathObj = ConsensusCluster(obj = TCGA_PathObj, maxK = 9, repcount = 50, pSample = 0.8, pRow = 1, distance = 'euclidean', clusterAlg = 'km',
seed = 123456)
TCGA_PathObj = calculate_ICI(TCGA_PathObj)
TCGA_PathObj = Hclust(TCGA_PathObj, nboot = 10)
TCGA_PathObj = SelectBestClusterNum(obj = TCGA_PathObj,
method="hclust",
k=12)
#plot coding and non coding
#TCGA
mut_exp_TCGA = fread("test/data/TCGA.HNSC.varscan.5296cf00-4d8c-4db3-80d7-930a4b44f90d.DR-10.0.somatic.maf",
header = TRUE)
mut_exp_TCGA = mut_exp_TCGA[mut_exp_TCGA$Variant_Classification!="Silent", ]
classification = as.data.frame(table(mut_exp_TCGA$Variant_Classification))
mut_exp_TCGA$mut_classifcation = if_else(mut_exp_TCGA$Variant_Classification%in%c("3'Flank",
"3'UTR",
"5'Flank",
"5'UTR",
"Intron",
"Translation_Start_Site"),
"non_coding", "coding")
mut_exp_TCGA = mut_exp_TCGA[, c("Hugo_Symbol", "mut_classifcation")]
mut_classifcation = mut_exp_TCGA
plot_mut_classification(obj = TCGA_PathObj, my_pal, mut_classifcation)
library(devtools)
devtools::load_all()
library(ggsci)
my_pal = c(pal_npg()(12), pal_aaas()(12), pal_futurama()(12))
my_pal = my_pal[!is.na(my_pal)]
my_pal = my_pal[!duplicated(my_pal)]
TCGA_PathObj = CreatePathObject(gmt_path="test/data/h.all.v7.4.symbols.gmt",
gene_exp_counts='test/data/TCGA_HNSC_gene_exp_count.csv',
gene_map='test/data/Homo_sapiens.GRCh38.99.chr.gtf',
gene_exp_TPM="test/data/TCGA_HNSC_gene_exp_TPM_tumor.csv",
ppi_data_path="test/data/ppi_dataset_all.txt",
cor_method=1,
mut_exp="test/data/TCGA-HNSC_UCSC.varscan2_snv.tsv.gz",
count_log=FALSE,
TPM_log=FALSE,
GeneSetCollect=FALSE,
sep = "\t")
TCGA_PathObj = NetFeatureCalculate(TCGA_PathObj)
load_all()
TCGA_PathObj = NetFeatureCalculate(TCGA_PathObj)
debugSource('E:/GenesetTMB/test/test.R', echo=TRUE)
load_all()
TCGA_PathObj = NetFeatureCalculate(TCGA_PathObj)
document()
load_all()
TCGA_PathObj = NetFeatureCalculate(TCGA_PathObj)
debugSource('E:/GenesetTMB/test/test.R', echo=TRUE)
load_all()
#plot mut in network
plot_mut_distribution(obj = TCGA_PathObj, my_pal, mut_classifcation)
debugSource('E:/GenesetTMB/test/test2.R', echo=TRUE)
?distinct
load_all()
load_all()
debugSource('E:/GenesetTMB/test/test2.R', echo=TRUE)
ggplot(path_mut_classifcation, aes(x = pathid,
y = count,
fill = mut_classification))+
geom_bar(stat = "identity", width = 0.8, position = "fill")+
scale_fill_manual(values = my_pal[1:length(unique(path_mut_classifcation$mut_classification))])+
labs(x="", y="Ration")+theme_bw()+
scale_y_continuous(position = "right")+
theme_main()+ggpubr::rotate_x_text(angle = 45)
ggplot(path_mut_classifcation, aes(x = pathid,
y = count,
fill = mut_classification))+
geom_bar(stat = "identity", width = 0.8, position = "fill")
dev.off()
dev.off()
dev.off()
dev.off()
ggplot(path_mut_classifcation, aes(x = pathid,
y = count,
fill = mut_classification))+
geom_bar(stat = "identity", width = 0.8, position = "fill")
ggplot(path_mut_classifcation, aes(x = pathid,
y = count,
fill = mut_classification))+
geom_bar(stat = "identity", width = 0.8, position = "fill")+
scale_fill_manual(values = my_pal[1:length(unique(path_mut_classifcation$mut_classification))])+
labs(x="", y="Ration")+theme_bw()+
scale_y_continuous(position = "right")+
theme_main()+ggpubr::rotate_x_text(angle = 45)
dev.off()
dev.off()
#plot mut in network
plot_mut_distribution(obj = TCGA_PathObj, my_pal, mut_classifcation)
check()
use_build_ignore("test/test2.R")
load_all()
check()
dev.off()
?p.adjust
load_all()
use_build_ignore("test/test.R")
load_all()
document()
mut_enrich(obj = TCGA_PathObj, my_pal=my_pal, mut_classifcation=mut_classifcation,
degree=2)
library(GSEABase)
gmt = getGmt("test/data/h.all.v7.4.symbols.gmt")
name_id = names(gmt)
gmt = lapply(gmt, function(x)x@geneIds)
names(gmt) = name_id
mut_exp = fread("test/data/TCGA-HNSC_UCSC.varscan2_snv.tsv.gz", header = TRUE,
data.table = FALSE)
mut_exp = mut_exp[mut_exp$effect!="synonymous_variant", ]
mut_exp = mut_exp[, c(1, 2)]
mut_list = split(mut_exp$gene, mut_exp$Sample_ID)
outTab_list = list()
for (geneset in names(gmt)){
outTab_tmp = data.frame()
i = 0
for (id in names(mut_list)){
i = i+1
geneset_tmp = gmt[[geneset]]
mut_genes = mut_list[[id]]
com_id = intersect(geneset_tmp, mut_genes)
outTab_tmp = rbind(outTab_tmp, cbind(sample_id=id, genesetid=geneset, len=length(com_id)))
tmp_id = str_c(geneset, i, sep = "_")
print(tmp_id)
}
outTab_list[[geneset]] = outTab_tmp
}
outTab_list = lapply(outTab_list, function(x){
x$len = as.numeric(x$len)
x = x[x$len>0, ]
x = x[, c(2,3)]
return(x)
})
outTab_df = do.call("rbind", outTab_list)
outTab_df_mean = outTab_df%>%group_by(genesetid)%>%summarise(mean=mean(len))
outTab_df_mean$direction = case_when(outTab_df_mean$mean>=2~"high",
outTab_df_mean$mean>=1.5&
outTab_df_mean$mean<2~"middle",
outTab_df_mean$mean<1.5~"low")
outTab_df_mean_TCGA = outTab_df_mean
outTab_df_mean_TCGA$genesetid = str_remove_all(outTab_df_mean_TCGA$genesetid,
"HALLMARK_")
plot_bar(df = outTab_df_mean_TCGA, my_pal = my_pal)
#mean sample geneset mut
plot_bar = function(df, my_pal){
colnames(df) = c("pathid", "FDR", "cluster")
#df$FDR = -log10(df$FDR)
df = arrange(df, desc(FDR))
df$pathid = factor(df$pathid,
levels = df$pathid)
theme_main = function(){
theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(size = 8, colour = "black"),
axis.text.y = element_text(size = 8, colour = "black"),
panel.border = element_rect(size = 0.7, linetype = 'solid', colour = "black"),
#legend.position = 'right'
)
}
theme_legend = function(){
theme(
legend.position = 'top',
legend.direction = "horizontal"
)
}
ggplot(df, aes(pathid, FDR))+geom_col(aes(fill=cluster), width = 0.4)+
scale_fill_manual(values = c(my_pal[1], "gray60", my_pal[2]))+
ylab("FDR")+xlab("")+scale_y_continuous(expand = c(0, 0))+
theme_bw()+
ggpubr::rotate_x_text(angle = 45)+
geom_hline(yintercept = c(1.5, 2),
linetype="dotdash", color='gray30')+
theme_main()+theme_legend()
}
plot_bar(df = outTab_df_mean_TCGA, my_pal = my_pal)
load_all()
load_all()
load_all()
debugSource('E:/GenesetTMB/test/test2.R', echo=TRUE)
load_all()
debugSource('E:/GenesetTMB/test/test2.R', echo=TRUE)
debugSource('E:/GenesetTMB/test/test2.R', echo=TRUE)
load_all()
debugSource('E:/GenesetTMB/test/test2.R', echo=TRUE)
debugSource('E:/GenesetTMB/test/test2.R', echo=TRUE)
load_all()
debugSource('E:/GenesetTMB/test/test2.R', echo=TRUE)
nettop_list = obj@module1$pathway_feature
nettop_feature1 = sapply(nettop_list, function(x){
x = x$small_world_sig
return(x)
}, simplify = TRUE)
nettop_feature1 = t(nettop_feature1)
nettop_feature1[, 'parameter1'] = nettop_feature1[, 'parameter1']+sample(50)/1000
nettop_feature1[nettop_feature1>1] = 1
nettop_feature1 = as.data.frame(nettop_feature1)
plot_point_samllworld(TCGA_PathObj)
load_all()
plot_point_samllworld(TCGA_PathObj, my_pal=my_pal)
load_all()
plot_point_samllworld(TCGA_PathObj, my_pal=my_pal)
load_all()
dev.off()
load_all()
plot_point_samllworld(TCGA_PathObj, my_pal=my_pal)
load_all()
#Significance
plot_point_fetsig(TCGA_PathObj, my_pal=my_pal)
check()
check()
load_all()
check()
load_all()
check()
install()
load_all()
install()
library(IWHMB)
warnings()
library(ggsci)
my_pal = c(pal_npg()(12), pal_aaas()(12), pal_futurama()(12))
my_pal = my_pal[!is.na(my_pal)]
my_pal = my_pal[!duplicated(my_pal)]
TCGA_PathObj = CreatePathObject(gmt_path="test/data/h.all.v7.4.symbols.gmt",
gene_exp_counts='test/data/TCGA_HNSC_gene_exp_count.csv',
gene_map='test/data/Homo_sapiens.GRCh38.99.chr.gtf',
gene_exp_TPM="test/data/TCGA_HNSC_gene_exp_TPM_tumor.csv",
ppi_data_path="test/data/ppi_dataset_all.txt",
cor_method=1,
mut_exp="test/data/TCGA-HNSC_UCSC.varscan2_snv.tsv.gz",
count_log=FALSE,
TPM_log=FALSE,
GeneSetCollect=FALSE,
sep = "\t")
?V
?CreatePathObject
